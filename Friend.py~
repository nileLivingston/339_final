"""
	CSCI 334: Distributed Systems
	Williams College
	Spring 2014

	Final Project: BLiP: Peer-to-Peer Chat
	Authors: 
		Jeremy Boissevain
		Nile Livingston
		Nehemiah Paramore

	This is going to be the main executable for the chat program.
	Each Peer is composed of various threaded processes:
		-A ServerThread that manages incoming chat requests.
		-Some number of ChatThreads, each of which individually
		manages an end-to-end chat session.

	To Do:
		-More sophisticated "chunking" for RSA. (Nile)
		-Address resolution via DHT.
		-Evaluation 
"""


import rsa


# put this in it's own file?
class Friend():
        def __init__(self):
                # both parts of stored key
                self.key_e = ''
                self.key_n = ''
                self.IPAddress = None
                # array of closest ip_addresses
                self.localAddresses = []
                

        def getRSAKey(self):
                return rsa.PublicKey(self.key_n, self.key_e)
        
        def getAddress(self):
                return self.IPAdress
